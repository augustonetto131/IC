filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores provisoes
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, provisoes) %>%
filter(!is.na(provisoes), !is.na(retorno_an)) %>%
filter(provisoes > 0) %>%
arrange(provisoes) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_provisoes_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Provisões no Smallfolio:
# Essas são as 30% com maiores provisoes
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, provisoes) %>%
filter(!is.na(provisoes), !is.na(retorno_an)) %>%
filter(provisoes > 0) %>%
arrange(desc(provisoes)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores provisoes
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, provisoes) %>%
filter(!is.na(provisoes), !is.na(retorno_an)) %>%
filter(provisoes > 0) %>%
arrange(provisoes) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_provisoes_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Resultados dos testes:
cat("Comparativo de retorno para ROE nas empresas grandes,p-valor:   ", p_return_ROE_big,
"\nComparativo de retorno para ROE nas empresas pequenas, p-valor: ", p_return_ROE_small,
"\n\nComparativo de retorno para ROA nas empresas grandes, p-valor:  ", p_return_ROA_big,
"\nComparativo de retorno para ROA nas empresas pequenas, p-valor: ", p_return_ROA_small,
"\n\nComparativo de retorno para ROIC nas empresas grandes, p-valor: ", p_return_ROIC_big,
"\nComparativo de retorno para ROIC nas empresas pequenas, p-valor: ", p_return_ROIC_small,
"\n\nComparativo de retorno para Lucro Bruto nas empresas grandes, p-valor: ", p_return_lucro_bruto_big,
"\nComparativo de retorno para Lucro Bruto nas empresas pequenas, p-valor: ", p_return_lucro_bruto_small,
"\n\nComparativo de retorno para crescimento de LPA nas empresas grandes, p-valor: ", p_return_LPA_growth_big,
"\nComparativo de retorno para Crescimento de LPA nas empresas pequenas, p-valor: ", p_return_LPA_growth_small,
"\n\nComparativo de retorno para Dívida/Cap. Próprio nas empresas grandes, p-valor: ", p_return_BS_big,
"\nComparativo de retorno para Dívida/Cap. Próprio nas empresas pequenas, p-valor: ", p_return_BS_small,
"\n\nComparativo de retorno para EBIT/Div. Líquida nas empresas grandes, p-valor: ", p_return_EBIT_DivLiq_big,
"\nComparativo de retorno para EBIT/Div. Líquida nas empresas pequenas, p-valor: ", p_return_EBIT_DivLiq_small,
"\n\nComparativo de retorno para Crescimento dos ativos nas empresas grandes, p-valor: ", p_return_ativo_growth_big,
"\nComparativo de retorno para Crescimento dos ativos nas empresas pequenas, p-valor: ", p_return_ativo_growth_small,
"\n\nComparativo de retorno para Provisões nas empresas pequenas, p-valor: ", p_return_provisoes_big,
"\nComparativo de retorno para Provisões nas empresas pequenas, p-valor: ", p_return_provisoes_small)
reg_ret_1_l <- lm(data = largefolio, retorno_an ~ lucro_bruto)
reg_ret_2_l <- lm(data = largefolio, retorno_an ~ provisoes)
reg_ret_3_l <- lm(data = largefolio, retorno_an ~ lucro_bruto + provisoes)
stargazer(reg_ret_1_l, reg_ret_2_l, reg_ret_3_l, type = "text", omit.stat = "f")
# Regressões para smallfolio:
reg_ret_1_s <- lm(data = smallfolio, retorno_an ~ lucro_bruto)
reg_ret_2_s <- lm(data = smallfolio, retorno_an ~ provisoes)
reg_ret_3_s <- lm(data = smallfolio, retorno_an ~ lucro_bruto + provisoes)
stargazer(reg_ret_1_s, reg_ret_2_s, reg_ret_3_s, type = "text", omit.stat = "f")
View(allfolio)
smallfolio <- read.csv("smallfolio.csv")
largefolio <- read.csv("largefolio.csv")
# Uma pequena alteracao:
smallfolio <- smallfolio %>%
mutate(portfolio = "smallfolio",
retorno_an = ((1+retorno_total/100)^(1/10))-1,
retorno_an = 100*retorno_an)
largefolio <- largefolio %>%
mutate(portfolio = "largefolio",
retorno_an = ((1+retorno_total/100)^(1/10))-1,
retorno_an = 100*retorno_an)
allfolio <- rbind(smallfolio, largefolio)
# Essas são as 30% com maiores ROE's
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROE) %>%
filter(!is.na(ROE), !is.na(retorno_an)) %>%
filter(ROE > 0 & ROE <= 100) %>%
arrange(desc(ROE)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores ROE's
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROE) %>%
filter(!is.na(ROE), !is.na(retorno_an)) %>%
filter(ROE > 0 & ROE <= 100) %>%
arrange(ROE) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_ROE_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### ROE no Smallfolio:
# Essas são as 30% com maiores ROE's
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROE) %>%
filter(!is.na(ROE), !is.na(retorno_an)) %>%
filter(ROE > 0 & ROE <= 100) %>%
arrange(desc(ROE)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores ROE's
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROE) %>%
filter(!is.na(ROE), !is.na(retorno_an)) %>%
filter(ROE > 0 & ROE <= 100) %>%
arrange(ROE) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_ROE_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### ROA no Bigfolio:
# Essas são as 30% com maiores ROA's
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROA) %>%
filter(!is.na(ROA), !is.na(retorno_an)) %>%
filter(ROA > 0) %>%
arrange(desc(ROA)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores ROA's
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROA) %>%
filter(!is.na(ROA), !is.na(retorno_an)) %>%
filter(ROA > 0) %>%
arrange(ROA) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_ROA_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### ROA no Smallfolio:
# Essas são as 30% com maiores ROA's
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROA) %>%
filter(!is.na(ROA), !is.na(retorno_an)) %>%
filter(ROA > 0) %>%
arrange(desc(ROA)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores ROA's
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROA) %>%
filter(!is.na(ROA), !is.na(retorno_an)) %>%
filter(ROA > 0) %>%
arrange(ROA) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_ROA_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### ROIC no Bigfolio:
# Essas são as 30% com maiores ROIC's
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROIC) %>%
filter(!is.na(ROIC), !is.na(retorno_an)) %>%
arrange(desc(ROIC)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
#mutate(cap_weight = (mkt_cap/sum(mkt_cap))) %>%
#summarise(return = sum(retorno_an * cap_weight)) %>%
#mutate(ret_ponderado = retorno_an * cap_weight) %>%
select(retorno_an)
# Essas são as 30% com menores ROIC's
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROIC) %>%
filter(!is.na(ROIC), !is.na(retorno_an)) %>%
arrange(ROIC) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
#mutate(cap_weight = (mkt_cap/sum(mkt_cap))) %>%
#summarise(return = sum(retorno_an * cap_weight)) %>%
#mutate(ret_ponderado = retorno_an * cap_weight) %>%
select(retorno_an)
# Comparação:
p_return_ROIC_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### ROIC no Smallfoilio:
# Essas são as 30% com maiores ROIC's
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROIC) %>%
filter(!is.na(ROIC), !is.na(retorno_an)) %>%
arrange(desc(ROIC)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores ROIC's
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ROIC) %>%
filter(!is.na(ROIC), !is.na(retorno_an)) %>%
arrange(ROIC) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_ROIC_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Lucro bruto no bigfolio:
# Essas são as 30% com maiores Lucro Bruto
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, lucro_bruto) %>%
filter(!is.na(lucro_bruto), !is.na(retorno_an)) %>%
arrange(desc(lucro_bruto)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores Lucro Bruto
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, lucro_bruto) %>%
filter(!is.na(lucro_bruto), !is.na(retorno_an)) %>%
arrange(lucro_bruto) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_lucro_bruto_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Lucro bruto no Smallfolio:
# Essas são as 30% com maiores Lucro Bruto
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, lucro_bruto) %>%
filter(!is.na(lucro_bruto), !is.na(retorno_an)) %>%
arrange(desc(lucro_bruto)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores Lucro Bruto
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, lucro_bruto) %>%
filter(!is.na(lucro_bruto), !is.na(retorno_an)) %>%
arrange(lucro_bruto) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_lucro_bruto_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Crescimento de LPA no Bigfolio:
# Essas são as 30% com maiores LPA growth
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, LPA_growth) %>%
filter(!is.na(LPA_growth), !is.na(retorno_an)) %>%
arrange(desc(LPA_growth)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores LPA growth
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, LPA_growth) %>%
filter(!is.na(LPA_growth), !is.na(retorno_an)) %>%
arrange(LPA_growth) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_LPA_growth_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Crescimento de LPA no Smallfolio:
# Essas são as 30% com maiores LPA growth
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, LPA_growth) %>%
filter(!is.na(LPA_growth), !is.na(retorno_an)) %>%
arrange(desc(LPA_growth)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores LPA growth
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, LPA_growth) %>%
filter(!is.na(LPA_growth), !is.na(retorno_an)) %>%
arrange(LPA_growth) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_LPA_growth_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Dívida/Cap. próprio no Bigfolio:
# Essas são as 30% com maiores BS
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, alav_BS) %>%
filter(!is.na(alav_BS), !is.na(retorno_an)) %>%
filter(alav_BS > 0) %>%
arrange(desc(alav_BS)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores BS
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, alav_BS) %>%
filter(!is.na(alav_BS), !is.na(retorno_an)) %>%
filter(alav_BS > 0) %>%
arrange(alav_BS) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_BS_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Dívida/Cap. próprio no Smallfolio:
# Essas são as 30% com maiores BS
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, alav_BS) %>%
filter(!is.na(alav_BS), !is.na(retorno_an)) %>%
filter(alav_BS > 0) %>%
arrange(desc(alav_BS)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores BS
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, alav_BS) %>%
filter(!is.na(alav_BS), !is.na(retorno_an)) %>%
filter(alav_BS > 0) %>%
arrange(alav_BS) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_BS_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### EBIT/Div. Liq. no Bigfolio:
# Essas são as 30% com maiores EBIT_DivLiq
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, EBIT_DivLiq) %>%
filter(!is.na(EBIT_DivLiq), !is.na(retorno_an)) %>%
filter(EBIT_DivLiq > 0) %>%
arrange(desc(EBIT_DivLiq)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores EBIT_DivLiq
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, EBIT_DivLiq) %>%
filter(!is.na(EBIT_DivLiq), !is.na(retorno_an)) %>%
filter(EBIT_DivLiq > 0) %>%
arrange(EBIT_DivLiq) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_EBIT_DivLiq_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### EBIT/Div. Liq. no Smallfolio:
# Essas são as 30% com maiores EBIT_DivLiq
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, EBIT_DivLiq) %>%
filter(!is.na(EBIT_DivLiq), !is.na(retorno_an)) %>%
filter(EBIT_DivLiq > 0) %>%
arrange(desc(EBIT_DivLiq)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores EBIT_DivLiq
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, EBIT_DivLiq) %>%
filter(!is.na(EBIT_DivLiq), !is.na(retorno_an)) %>%
filter(EBIT_DivLiq > 0) %>%
arrange(EBIT_DivLiq) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_EBIT_DivLiq_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Crescimento de ativo no Bigfolio:
# Essas são as 30% com maiores ativo_growth
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ativo_growth) %>%
filter(!is.na(ativo_growth), !is.na(retorno_an)) %>%
arrange(desc(ativo_growth)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores ativo_growth
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ativo_growth) %>%
filter(!is.na(ativo_growth), !is.na(retorno_an)) %>%
arrange(ativo_growth) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_ativo_growth_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Crescimento de ativo no Smallfolio:
# Essas são as 30% com maiores ativo_growth
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ativo_growth) %>%
filter(!is.na(ativo_growth), !is.na(retorno_an)) %>%
arrange(desc(ativo_growth)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores ativo_growth
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, ativo_growth) %>%
filter(!is.na(ativo_growth), !is.na(retorno_an)) %>%
arrange(ativo_growth) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_ativo_growth_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Provisões no Bigfolio:
# Essas são as 30% com maiores provisoes
top30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, provisoes) %>%
filter(!is.na(provisoes), !is.na(retorno_an)) %>%
filter(provisoes > 0) %>%
arrange(desc(provisoes)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores provisoes
bottom30 <- largefolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, provisoes) %>%
filter(!is.na(provisoes), !is.na(retorno_an)) %>%
filter(provisoes > 0) %>%
arrange(provisoes) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_provisoes_big <- t.test(return_top30, return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Provisões no Smallfolio:
# Essas são as 30% com maiores provisoes
top30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, provisoes) %>%
filter(!is.na(provisoes), !is.na(retorno_an)) %>%
filter(provisoes > 0) %>%
arrange(desc(provisoes)) %>%
filter(row_number() < (0.3)*max(row_number()))
return_top30 <- top30 %>%
select(retorno_an)
# Essas são as 30% com menores provisoes
bottom30 <- smallfolio %>%
select(id, nome, classe, ticker, retorno_an, mkt_cap, provisoes) %>%
filter(!is.na(provisoes), !is.na(retorno_an)) %>%
filter(provisoes > 0) %>%
arrange(provisoes) %>%
filter(row_number() < (0.3)*max(row_number()))
return_bottom30 <- bottom30 %>%
select(retorno_an)
# Comparação:
p_return_provisoes_small <- t.test(x = return_top30, y = return_bottom30, alternative = "greater", mu = 0, paired = FALSE,
var.equal = FALSE, conf.level = 0.95)$p.value
###### Resultados dos testes:
cat("Comparativo de retorno para ROE nas empresas grandes,p-valor:   ", p_return_ROE_big,
"\nComparativo de retorno para ROE nas empresas pequenas, p-valor: ", p_return_ROE_small,
"\n\nComparativo de retorno para ROA nas empresas grandes, p-valor:  ", p_return_ROA_big,
"\nComparativo de retorno para ROA nas empresas pequenas, p-valor: ", p_return_ROA_small,
"\n\nComparativo de retorno para ROIC nas empresas grandes, p-valor: ", p_return_ROIC_big,
"\nComparativo de retorno para ROIC nas empresas pequenas, p-valor: ", p_return_ROIC_small,
"\n\nComparativo de retorno para Lucro Bruto nas empresas grandes, p-valor: ", p_return_lucro_bruto_big,
"\nComparativo de retorno para Lucro Bruto nas empresas pequenas, p-valor: ", p_return_lucro_bruto_small,
"\n\nComparativo de retorno para crescimento de LPA nas empresas grandes, p-valor: ", p_return_LPA_growth_big,
"\nComparativo de retorno para Crescimento de LPA nas empresas pequenas, p-valor: ", p_return_LPA_growth_small,
"\n\nComparativo de retorno para Dívida/Cap. Próprio nas empresas grandes, p-valor: ", p_return_BS_big,
"\nComparativo de retorno para Dívida/Cap. Próprio nas empresas pequenas, p-valor: ", p_return_BS_small,
"\n\nComparativo de retorno para EBIT/Div. Líquida nas empresas grandes, p-valor: ", p_return_EBIT_DivLiq_big,
"\nComparativo de retorno para EBIT/Div. Líquida nas empresas pequenas, p-valor: ", p_return_EBIT_DivLiq_small,
"\n\nComparativo de retorno para Crescimento dos ativos nas empresas grandes, p-valor: ", p_return_ativo_growth_big,
"\nComparativo de retorno para Crescimento dos ativos nas empresas pequenas, p-valor: ", p_return_ativo_growth_small,
"\n\nComparativo de retorno para Provisões nas empresas pequenas, p-valor: ", p_return_provisoes_big,
"\nComparativo de retorno para Provisões nas empresas pequenas, p-valor: ", p_return_provisoes_small)
reg_ret_1_l <- lm(data = largefolio, retorno_an ~ lucro_bruto)
reg_ret_2_l <- lm(data = largefolio, retorno_an ~ provisoes)
reg_ret_3_l <- lm(data = largefolio, retorno_an ~ lucro_bruto + provisoes)
stargazer(reg_ret_1_l, reg_ret_2_l, reg_ret_3_l, type = "text", omit.stat = "f")
reg_ret_1_s <- lm(data = smallfolio, retorno_an ~ lucro_bruto)
reg_ret_2_s <- lm(data = smallfolio, retorno_an ~ provisoes)
reg_ret_3_s <- lm(data = smallfolio, retorno_an ~ lucro_bruto + provisoes)
stargazer(reg_ret_1_s, reg_ret_2_s, reg_ret_3_s, type = "text", omit.stat = "f")
portfolio <- read.csv("portfolio.csv")
smallfolio <- read.csv("smallfolio.csv")
largefolio <- read.csv("largefolio.csv")
# Uma pequena alteracao:
smallfolio <- smallfolio %>%
mutate(portfolio = "smallfolio",
retorno_an = ((1+retorno_total/100)^(1/10))-1,
retorno_an = 100*retorno_an)
largefolio <- largefolio %>%
mutate(portfolio = "largefolio",
retorno_an = ((1+retorno_total/100)^(1/10))-1,
retorno_an = 100*retorno_an)
allfolio <- rbind(smallfolio, largefolio)
write.csv(smallfolio, file = "smallfolio.csv", append = F)
write.csv(largefolio, file = "largefolio.csv", append = F)
write.csv(allfolio, file = "allfolio.csv", append = F)
getwd
getwd()
setwd("~/Insper/IC/IC_Data/Dataset")
write.csv(smallfolio, file = "smallfolio.csv", append = F)
write.csv(largefolio, file = "largefolio.csv", append = F)
write.csv(allfolio, file = "allfolio.csv", append = F)
